{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/tty.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../node_modules/replicate/lib/error.js", "../../../node_modules/replicate/lib/identifier.js", "../../../node_modules/replicate/lib/files.js", "../../../node_modules/replicate/lib/util.js", "../../../node_modules/replicate/vendor/eventsource-parser/stream.js", "../../../node_modules/replicate/vendor/streams-text-encoding/text-decoder-stream.js", "../../../node_modules/replicate/lib/stream.js", "../../../node_modules/replicate/lib/accounts.js", "../../../node_modules/replicate/lib/collections.js", "../../../node_modules/replicate/lib/deployments.js", "../../../node_modules/replicate/lib/hardware.js", "../../../node_modules/replicate/lib/models.js", "../../../node_modules/replicate/lib/predictions.js", "../../../node_modules/replicate/lib/trainings.js", "../../../node_modules/replicate/lib/webhooks.js", "../../../node_modules/replicate/package.json", "../../../node_modules/replicate/index.js", "../../../functions/api/generate-image.ts", "../../../functions/api/vectorize.ts", "../../../functions/_middleware.ts", "functionsRoutes-0.7122580550077959.mjs", "../bundle-QxqQ4N/middleware-loader.entry.ts", "../bundle-QxqQ4N/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\Users\\aaron\\Documents\\VibeCodeDnD\\glesolas-game\\.wrangler\\tmp\\pages-9oizyN\\functionsWorker-0.9120446754158482.mjs",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "import { ReadStream } from \"./internal/tty/read-stream.mjs\";\nimport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "/**\n * A representation of an API error.\n */\nclass ApiError extends Error {\n  /**\n   * Creates a representation of an API error.\n   *\n   * @param {string} message - Error message\n   * @param {Request} request - HTTP request\n   * @param {Response} response - HTTP response\n   * @returns {ApiError} - An instance of ApiError\n   */\n  constructor(message, request, response) {\n    super(message);\n    this.name = \"ApiError\";\n    this.request = request;\n    this.response = response;\n  }\n}\n\nmodule.exports = ApiError;\n", "/*\n * A reference to a model version in the format `owner/name` or `owner/name:version`.\n */\nclass ModelVersionIdentifier {\n  /*\n   * @param {string} Required. The model owner.\n   * @param {string} Required. The model name.\n   * @param {string} The model version.\n   */\n  constructor(owner, name, version = null) {\n    this.owner = owner;\n    this.name = name;\n    this.version = version;\n  }\n\n  /*\n   * Parse a reference to a model version\n   *\n   * @param {string}\n   * @returns {ModelVersionIdentifier}\n   * @throws {Error} If the reference is invalid.\n   */\n  static parse(ref) {\n    const match = ref.match(\n      /^(?<owner>[^/]+)\\/(?<name>[^/:]+)(:(?<version>.+))?$/\n    );\n    if (!match) {\n      throw new Error(\n        `Invalid reference to model version: ${ref}. Expected format: owner/name or owner/name:version`\n      );\n    }\n\n    const { owner, name, version } = match.groups;\n\n    return new ModelVersionIdentifier(owner, name, version);\n  }\n}\n\nmodule.exports = ModelVersionIdentifier;\n", "/**\n * Create a file\n *\n * @param {object} file - Required. The file object.\n * @param {object} metadata - Optional. User-provided metadata associated with the file.\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with the file data\n */\nasync function createFile(file, metadata = {}, { signal } = {}) {\n  const form = new FormData();\n\n  let filename;\n  let blob;\n  if (file instanceof Blob) {\n    filename = file.name || `blob_${Date.now()}`;\n    blob = file;\n  } else if (Buffer.isBuffer(file)) {\n    filename = `buffer_${Date.now()}`;\n    const bytes = new Uint8Array(file);\n    blob = new Blob([bytes], {\n      type: \"application/octet-stream\",\n      name: filename,\n    });\n  } else {\n    throw new Error(\"Invalid file argument, must be a Blob, File or Buffer\");\n  }\n\n  form.append(\"content\", blob, filename);\n  form.append(\n    \"metadata\",\n    new Blob([JSON.stringify(metadata)], { type: \"application/json\" })\n  );\n\n  const response = await this.request(\"/files\", {\n    method: \"POST\",\n    data: form,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * List all files\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with the files data\n */\nasync function listFiles({ signal } = {}) {\n  const response = await this.request(\"/files\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Get a file\n *\n * @param {string} file_id - Required. The ID of the file.\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with the file data\n */\nasync function getFile(file_id, { signal } = {}) {\n  const response = await this.request(`/files/${file_id}`, {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Delete a file\n *\n * @param {string} file_id - Required. The ID of the file.\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<boolean>} - Resolves with true if the file was deleted\n */\nasync function deleteFile(file_id, { signal } = {}) {\n  const response = await this.request(`/files/${file_id}`, {\n    method: \"DELETE\",\n    signal,\n  });\n\n  return response.status === 204;\n}\n\nmodule.exports = {\n  create: createFile,\n  list: listFiles,\n  get: getFile,\n  delete: deleteFile,\n};\n", "const ApiError = require(\"./error\");\nconst { create: createFile } = require(\"./files\");\n\n/**\n * @see {@link validateWebhook}\n * @overload\n * @param {object} requestData - The request data\n * @param {string} requestData.id - The webhook ID header from the incoming request.\n * @param {string} requestData.timestamp - The webhook timestamp header from the incoming request.\n * @param {string} requestData.body - The raw body of the incoming webhook request.\n * @param {string} requestData.secret - The webhook secret, obtained from `replicate.webhooks.defaul.secret` method.\n * @param {string} requestData.signature - The webhook signature header from the incoming request, comprising one or more space-delimited signatures.\n * @param {Crypto} [crypto] - An optional `Crypto` implementation that conforms to the [browser Crypto interface](https://developer.mozilla.org/en-US/docs/Web/API/Window/crypto)\n */\n\n/**\n * @see {@link validateWebhook}\n * @overload\n * @param {object} requestData - The request object\n * @param {object} requestData.headers - The request headers\n * @param {string} requestData.headers[\"webhook-id\"] - The webhook ID header from the incoming request\n * @param {string} requestData.headers[\"webhook-timestamp\"] - The webhook timestamp header from the incoming request\n * @param {string} requestData.headers[\"webhook-signature\"] - The webhook signature header from the incoming request, comprising one or more space-delimited signatures\n * @param {string} requestData.body - The raw body of the incoming webhook request\n * @param {string} secret - The webhook secret, obtained from `replicate.webhooks.defaul.secret` method\n * @param {Crypto} [crypto] - An optional `Crypto` implementation that conforms to the [browser Crypto interface](https://developer.mozilla.org/en-US/docs/Web/API/Window/crypto)\n */\n\n/**\n * Validate a webhook signature\n *\n * @returns {Promise<boolean>} - True if the signature is valid\n * @throws {Error} - If the request is missing required headers, body, or secret\n */\nasync function validateWebhook(requestData, secretOrCrypto, customCrypto) {\n  let id;\n  let body;\n  let timestamp;\n  let signature;\n  let secret;\n  let crypto = globalThis.crypto;\n\n  if (requestData && requestData.headers && requestData.body) {\n    if (typeof requestData.headers.get === \"function\") {\n      // Headers object (e.g. Fetch API Headers)\n      id = requestData.headers.get(\"webhook-id\");\n      timestamp = requestData.headers.get(\"webhook-timestamp\");\n      signature = requestData.headers.get(\"webhook-signature\");\n    } else {\n      // Plain object with header key-value pairs\n      id = requestData.headers[\"webhook-id\"];\n      timestamp = requestData.headers[\"webhook-timestamp\"];\n      signature = requestData.headers[\"webhook-signature\"];\n    }\n    body = requestData.body;\n    if (typeof secretOrCrypto !== \"string\") {\n      throw new Error(\n        \"Unexpected value for secret passed to validateWebhook, expected a string\"\n      );\n    }\n\n    secret = secretOrCrypto;\n    if (customCrypto) {\n      crypto = customCrypto;\n    }\n  } else {\n    id = requestData.id;\n    body = requestData.body;\n    timestamp = requestData.timestamp;\n    signature = requestData.signature;\n    secret = requestData.secret;\n    if (secretOrCrypto) {\n      crypto = secretOrCrypto;\n    }\n  }\n\n  if (body instanceof ReadableStream || body.readable) {\n    try {\n      body = await new Response(body).text();\n    } catch (err) {\n      throw new Error(`Error reading body: ${err.message}`);\n    }\n  } else if (isTypedArray(body)) {\n    body = await new Blob([body]).text();\n  } else if (typeof body === \"object\") {\n    body = JSON.stringify(body);\n  } else if (typeof body !== \"string\") {\n    throw new Error(\"Invalid body type\");\n  }\n\n  if (!id || !timestamp || !signature) {\n    throw new Error(\"Missing required webhook headers\");\n  }\n\n  if (!body) {\n    throw new Error(\"Missing required body\");\n  }\n\n  if (!secret) {\n    throw new Error(\"Missing required secret\");\n  }\n\n  if (!crypto) {\n    throw new Error(\n      'Missing `crypto` implementation. If using Node 18 pass in require(\"node:crypto\").webcrypto'\n    );\n  }\n\n  const signedContent = `${id}.${timestamp}.${body}`;\n\n  const computedSignature = await createHMACSHA256(\n    secret.split(\"_\").pop(),\n    signedContent,\n    crypto\n  );\n\n  const expectedSignatures = signature\n    .split(\" \")\n    .map((sig) => sig.split(\",\")[1]);\n\n  return expectedSignatures.some(\n    (expectedSignature) => expectedSignature === computedSignature\n  );\n}\n\n/**\n * @param {string} secret - base64 encoded string\n * @param {string} data - text body of request\n * @param {Crypto} crypto - an implementation of the web Crypto api\n */\nasync function createHMACSHA256(secret, data, crypto) {\n  const encoder = new TextEncoder();\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    base64ToBytes(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"]\n  );\n\n  const signature = await crypto.subtle.sign(\"HMAC\", key, encoder.encode(data));\n  return bytesToBase64(signature);\n}\n\n/**\n * Convert a base64 encoded string into bytes.\n *\n * @param {string} the base64 encoded string\n * @return {Uint8Array}\n *\n * Two functions for encoding/decoding base64 strings using web standards. Not\n * intended to be used to encode/decode arbitrary string data.\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Base64#javascript_support\n * See: https://stackoverflow.com/a/31621532\n *\n * Performance might take a hit because of the conversion to string and then to binary,\n * if this is the case we might want to look at an alternative solution.\n * See: https://jsben.ch/wnaZC\n */\nfunction base64ToBytes(base64) {\n  return Uint8Array.from(atob(base64), (m) => m.codePointAt(0));\n}\n\n/**\n * Convert a base64 encoded string into bytes.\n *\n * See {@link base64ToBytes} for caveats.\n *\n * @param {Uint8Array | ArrayBuffer} the base64 encoded string\n * @return {string}\n */\nfunction bytesToBase64(bytes) {\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(bytes)));\n}\n\n/**\n * Automatically retry a request if it fails with an appropriate status code.\n *\n * A GET request is retried if it fails with a 429 or 5xx status code.\n * A non-GET request is retried only if it fails with a 429 status code.\n *\n * If the response sets a Retry-After header,\n * the request is retried after the number of seconds specified in the header.\n * Otherwise, the request is retried after the specified interval,\n * with exponential backoff and jitter.\n *\n * @param {Function} request - A function that returns a Promise that resolves with a Response object\n * @param {object} options\n * @param {Function} [options.shouldRetry] - A function that returns true if the request should be retried\n * @param {number} [options.maxRetries] - Maximum number of retries. Defaults to 5\n * @param {number} [options.interval] - Interval between retries in milliseconds. Defaults to 500\n * @returns {Promise<Response>} - Resolves with the response object\n * @throws {ApiError} If the request failed\n */\nasync function withAutomaticRetries(request, options = {}) {\n  const shouldRetry = options.shouldRetry || (() => false);\n  const maxRetries = options.maxRetries || 5;\n  const interval = options.interval || 500;\n  const jitter = options.jitter || 100;\n\n  // eslint-disable-next-line no-promise-executor-return\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n  let attempts = 0;\n  do {\n    let delay = interval * 2 ** attempts + Math.random() * jitter;\n\n    /* eslint-disable no-await-in-loop */\n    try {\n      const response = await request();\n      if (response.ok || !shouldRetry(response)) {\n        return response;\n      }\n    } catch (error) {\n      if (error instanceof ApiError) {\n        const retryAfter = error.response.headers.get(\"Retry-After\");\n        if (retryAfter) {\n          if (!Number.isInteger(retryAfter)) {\n            // Retry-After is a date\n            const date = new Date(retryAfter);\n            if (!Number.isNaN(date.getTime())) {\n              delay = date.getTime() - new Date().getTime();\n            }\n          } else {\n            // Retry-After is a number of seconds\n            delay = retryAfter * 1000;\n          }\n        }\n      }\n    }\n\n    if (Number.isInteger(maxRetries) && maxRetries > 0) {\n      if (Number.isInteger(delay) && delay > 0) {\n        await sleep(interval * 2 ** (options.maxRetries - maxRetries));\n      }\n      attempts += 1;\n    }\n  } while (attempts < maxRetries);\n\n  return request();\n}\n\n/**\n * Walks the inputs and, for any File or Blob, tries to upload it to Replicate\n * and replaces the input with the URL of the uploaded file.\n *\n * @param {Replicate} client - The client used to upload the file\n * @param {object} inputs - The inputs to transform\n * @param {\"default\" | \"upload\" | \"data-uri\"} strategy - Whether to upload files to Replicate, encode as dataURIs or try both.\n * @returns {Promise<object>} - The transformed inputs\n * @throws {ApiError} If the request to upload the file fails\n */\nasync function transformFileInputs(client, inputs, strategy) {\n  switch (strategy) {\n    case \"data-uri\":\n      return await transformFileInputsToBase64EncodedDataURIs(client, inputs);\n    case \"upload\":\n      return await transformFileInputsToReplicateFileURLs(client, inputs);\n    case \"default\":\n      try {\n        return await transformFileInputsToReplicateFileURLs(client, inputs);\n      } catch (error) {\n        if (\n          error instanceof ApiError &&\n          error.response.status >= 400 &&\n          error.response.status < 500\n        ) {\n          throw error;\n        }\n        return await transformFileInputsToBase64EncodedDataURIs(inputs);\n      }\n    default:\n      throw new Error(`Unexpected file upload strategy: ${strategy}`);\n  }\n}\n\n/**\n * Walks the inputs and, for any File or Blob, tries to upload it to Replicate\n * and replaces the input with the URL of the uploaded file.\n *\n * @param {Replicate} client - The client used to upload the file\n * @param {object} inputs - The inputs to transform\n * @returns {Promise<object>} - The transformed inputs\n * @throws {ApiError} If the request to upload the file fails\n */\nasync function transformFileInputsToReplicateFileURLs(client, inputs) {\n  return await transform(inputs, async (value) => {\n    if (value instanceof Blob || value instanceof Buffer) {\n      const file = await createFile.call(client, value);\n      return file.urls.get;\n    }\n\n    return value;\n  });\n}\n\nconst MAX_DATA_URI_SIZE = 10_000_000;\n\n/**\n * Walks the inputs and transforms any binary data found into a\n * base64-encoded data URI.\n *\n * @param {object} inputs - The inputs to transform\n * @returns {Promise<object>} - The transformed inputs\n * @throws {Error} If the size of inputs exceeds a given threshold set by MAX_DATA_URI_SIZE\n */\nasync function transformFileInputsToBase64EncodedDataURIs(inputs) {\n  let totalBytes = 0;\n  return await transform(inputs, async (value) => {\n    let buffer;\n    let mime;\n\n    if (value instanceof Blob) {\n      // Currently, we use a NodeJS only API for base64 encoding, as\n      // we move to support the browser we could support either using\n      // btoa (which does string encoding), the FileReader API or\n      // a JavaScript implementation like base64-js.\n      // See: https://developer.mozilla.org/en-US/docs/Glossary/Base64\n      // See: https://github.com/beatgammit/base64-js\n      buffer = await value.arrayBuffer();\n      mime = value.type;\n    } else if (isTypedArray(value)) {\n      buffer = value;\n    } else {\n      return value;\n    }\n\n    totalBytes += buffer.byteLength;\n    if (totalBytes > MAX_DATA_URI_SIZE) {\n      throw new Error(\n        `Combined filesize of prediction ${totalBytes} bytes exceeds 10mb limit for inline encoding, please provide URLs instead`\n      );\n    }\n\n    const data = bytesToBase64(buffer);\n    mime = mime || \"application/octet-stream\";\n\n    return `data:${mime};base64,${data}`;\n  });\n}\n\n// Walk a JavaScript object and transform the leaf values.\nasync function transform(value, mapper) {\n  if (Array.isArray(value)) {\n    const copy = [];\n    for (const val of value) {\n      const transformed = await transform(val, mapper);\n      copy.push(transformed);\n    }\n    return copy;\n  }\n\n  if (isPlainObject(value)) {\n    const copy = {};\n    for (const key of Object.keys(value)) {\n      copy[key] = await transform(value[key], mapper);\n    }\n    return copy;\n  }\n\n  return await mapper(value);\n}\n\nfunction isTypedArray(arr) {\n  return (\n    arr instanceof Int8Array ||\n    arr instanceof Int16Array ||\n    arr instanceof Int32Array ||\n    arr instanceof Uint8Array ||\n    arr instanceof Uint8ClampedArray ||\n    arr instanceof Uint16Array ||\n    arr instanceof Uint32Array ||\n    arr instanceof Float32Array ||\n    arr instanceof Float64Array\n  );\n}\n\n// Test for a plain JS object.\n// Source: lodash.isPlainObject\nfunction isPlainObject(value) {\n  const isObjectLike = typeof value === \"object\" && value !== null;\n  if (!isObjectLike || String(value) !== \"[object Object]\") {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor =\n    Object.prototype.hasOwnProperty.call(proto, \"constructor\") &&\n    proto.constructor;\n  return (\n    typeof Ctor === \"function\" &&\n    Ctor instanceof Ctor &&\n    Function.prototype.toString.call(Ctor) ===\n      Function.prototype.toString.call(Object)\n  );\n}\n\n/**\n * Parse progress from prediction logs.\n *\n * This function supports log statements in the following format,\n * which are generated by https://github.com/tqdm/tqdm and similar libraries:\n *\n * ```\n * 76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 7568/10000 [00:33<00:10, 229.00it/s]\n * ```\n *\n * @example\n * const progress = parseProgressFromLogs(\"76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 7568/10000 [00:33<00:10, 229.00it/s]\");\n * console.log(progress);\n * // {\n * //   percentage: 0.76,\n * //   current: 7568,\n * //   total: 10000,\n * // }\n *\n * @param {object|string} input - A prediction object or string.\n * @returns {(object|null)} - An object with the percentage, current, and total, or null if no progress can be parsed.\n */\nfunction parseProgressFromLogs(input) {\n  const logs = typeof input === \"object\" && input.logs ? input.logs : input;\n  if (!logs || typeof logs !== \"string\") {\n    return null;\n  }\n\n  const pattern = /^\\s*(\\d+)%\\s*\\|.+?\\|\\s*(\\d+)\\/(\\d+)/;\n  const lines = logs.split(\"\\n\").reverse();\n\n  for (const line of lines) {\n    const matches = line.match(pattern);\n\n    if (matches && matches.length === 4) {\n      return {\n        percentage: parseInt(matches[1], 10) / 100,\n        current: parseInt(matches[2], 10),\n        total: parseInt(matches[3], 10),\n      };\n    }\n  }\n\n  return null;\n}\n\n/**\n * Helper to make any `ReadableStream` iterable, this is supported\n * by most server runtimes but browsers still haven't implemented\n * it yet.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream#browser_compatibility\n *\n * @template T\n * @param {ReadableStream<T>} stream an instance of a `ReadableStream`\n * @yields {T} a chunk/event from the stream\n */\nasync function* streamAsyncIterator(stream) {\n  const reader = stream.getReader();\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) return;\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nmodule.exports = {\n  transform,\n  transformFileInputs,\n  validateWebhook,\n  withAutomaticRetries,\n  parseProgressFromLogs,\n  streamAsyncIterator,\n};\n", "// Source: https://github.com/rexxars/eventsource-parser/tree/v1.1.2\n//\n// MIT License\n//\n// Copyright (c) 2024 Espen Hovlandsdal <espen@hovlandsdal.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if ((from && typeof from === \"object\") || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,\n        });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) =>\n  __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// /input.ts\nvar input_exports = {};\n__export(input_exports, {\n  EventSourceParserStream: () => EventSourceParserStream,\n});\nmodule.exports = __toCommonJS(input_exports);\n\n// http-url:https://unpkg.com/eventsource-parser@1.1.2/dist/index.js\nfunction createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset,\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (\n        let index = startingPosition;\n        lineLength < 0 && index < length;\n        ++index\n      ) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1),\n          // remove trailing newline\n        });\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(\n      index,\n      index + (noValue ? lineLength : fieldLength)\n    );\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry,\n        });\n      }\n    }\n  }\n}\nvar BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\n\n// http-url:https://unpkg.com/eventsource-parser@1.1.2/dist/stream.js\nvar EventSourceParserStream = class extends TransformStream {\n  constructor() {\n    let parser;\n    super({\n      start(controller) {\n        parser = createParser((event) => {\n          if (event.type === \"event\") {\n            controller.enqueue(event);\n          }\n        });\n      },\n      transform(chunk) {\n        parser.feed(chunk);\n      },\n    });\n  }\n};\n", "// Adapted from https://github.com/stardazed/sd-streams\n//\n// MIT License\n//\n// Copyright (c) 2018-Present @zenmumbler\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// /input.ts\nvar input_exports = {};\n__export(input_exports, {\n  TextDecoderStream: () => TextDecoderStream\n});\nmodule.exports = __toCommonJS(input_exports);\n\n// http-url:https://unpkg.com/@stardazed/streams-text-encoding@1.0.2/dist/sd-streams-text-encoding.esm.js\nvar decDecoder = Symbol(\"decDecoder\");\nvar decTransform = Symbol(\"decTransform\");\nvar TextDecodeTransformer = class {\n  constructor(decoder) {\n    this.decoder_ = decoder;\n  }\n  transform(chunk, controller) {\n    if (!(chunk instanceof ArrayBuffer || ArrayBuffer.isView(chunk))) {\n      throw new TypeError(\"Input data must be a BufferSource\");\n    }\n    const text = this.decoder_.decode(chunk, { stream: true });\n    if (text.length !== 0) {\n      controller.enqueue(text);\n    }\n  }\n  flush(controller) {\n    const text = this.decoder_.decode();\n    if (text.length !== 0) {\n      controller.enqueue(text);\n    }\n  }\n};\nvar TextDecoderStream = class {\n  constructor(label, options) {\n    const decoder = new TextDecoder(label || \"utf-8\", options || {});\n    this[decDecoder] = decoder;\n    this[decTransform] = new TransformStream(new TextDecodeTransformer(decoder));\n  }\n  get encoding() {\n    return this[decDecoder].encoding;\n  }\n  get fatal() {\n    return this[decDecoder].fatal;\n  }\n  get ignoreBOM() {\n    return this[decDecoder].ignoreBOM;\n  }\n  get readable() {\n    return this[decTransform].readable;\n  }\n  get writable() {\n    return this[decTransform].writable;\n  }\n};\nvar encEncoder = Symbol(\"encEncoder\");\nvar encTransform = Symbol(\"encTransform\");\n", "// Attempt to use readable-stream if available, attempt to use the built-in stream module.\n\nconst ApiError = require(\"./error\");\nconst { streamAsyncIterator } = require(\"./util\");\nconst {\n  EventSourceParserStream,\n} = require(\"../vendor/eventsource-parser/stream\");\nconst { TextDecoderStream } =\n  typeof globalThis.TextDecoderStream === \"undefined\"\n    ? require(\"../vendor/streams-text-encoding/text-decoder-stream\")\n    : globalThis;\n\n/**\n * A server-sent event.\n */\nclass ServerSentEvent {\n  /**\n   * Create a new server-sent event.\n   *\n   * @param {string} event The event name.\n   * @param {string} data The event data.\n   * @param {string} id The event ID.\n   * @param {number} retry The retry time.\n   */\n  constructor(event, data, id, retry) {\n    this.event = event;\n    this.data = data;\n    this.id = id;\n    this.retry = retry;\n  }\n\n  /**\n   * Convert the event to a string.\n   */\n  toString() {\n    if (this.event === \"output\") {\n      return this.data;\n    }\n\n    return \"\";\n  }\n}\n\n/**\n * Create a new stream of server-sent events.\n *\n * @param {object} config\n * @param {string} config.url The URL to connect to.\n * @param {typeof fetch} [config.fetch] The URL to connect to.\n * @param {object} [config.options] The EventSource options.\n * @param {boolean} [config.options.useFileOutput] Whether to use the file output stream.\n * @returns {ReadableStream<ServerSentEvent> & AsyncIterable<ServerSentEvent>}\n */\nfunction createReadableStream({ url, fetch, options = {} }) {\n  const { useFileOutput = true, headers = {}, ...initOptions } = options;\n\n  return new ReadableStream({\n    async start(controller) {\n      const init = {\n        ...initOptions,\n        headers: {\n          ...headers,\n          Accept: \"text/event-stream\",\n        },\n      };\n      const response = await fetch(url, init);\n\n      if (!response.ok) {\n        const text = await response.text();\n        const request = new Request(url, init);\n        controller.error(\n          new ApiError(\n            `Request to ${url} failed with status ${response.status}: ${text}`,\n            request,\n            response\n          )\n        );\n      }\n\n      const stream = response.body\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new EventSourceParserStream());\n\n      for await (const event of streamAsyncIterator(stream)) {\n        if (event.event === \"error\") {\n          controller.error(new Error(event.data));\n          break;\n        }\n\n        let data = event.data;\n        if (\n          useFileOutput &&\n          typeof data === \"string\" &&\n          (data.startsWith(\"https:\") || data.startsWith(\"data:\"))\n        ) {\n          data = createFileOutput({ data, fetch });\n        }\n        controller.enqueue(new ServerSentEvent(event.event, data, event.id));\n\n        if (event.event === \"done\") {\n          break;\n        }\n      }\n\n      controller.close();\n    },\n  });\n}\n\n/**\n * Create a new readable stream for an output file\n * created by running a Replicate model.\n *\n * @param {object} config\n * @param {string} config.url The URL to connect to.\n * @param {typeof fetch} [config.fetch] The fetch function.\n * @returns {ReadableStream<Uint8Array>}\n */\nfunction createFileOutput({ url, fetch }) {\n  let type = \"application/octet-stream\";\n\n  class FileOutput extends ReadableStream {\n    async blob() {\n      const chunks = [];\n      for await (const chunk of this) {\n        chunks.push(chunk);\n      }\n      return new Blob(chunks, { type });\n    }\n\n    url() {\n      return new URL(url);\n    }\n\n    toString() {\n      return url;\n    }\n  }\n\n  return new FileOutput({\n    async start(controller) {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        const text = await response.text();\n        const request = new Request(url, init);\n        controller.error(\n          new ApiError(\n            `Request to ${url} failed with status ${response.status}: ${text}`,\n            request,\n            response\n          )\n        );\n      }\n\n      if (response.headers.get(\"Content-Type\")) {\n        type = response.headers.get(\"Content-Type\");\n      }\n\n      try {\n        for await (const chunk of streamAsyncIterator(response.body)) {\n          controller.enqueue(chunk);\n        }\n        controller.close();\n      } catch (err) {\n        controller.error(err);\n      }\n    },\n  });\n}\n\nmodule.exports = {\n  createFileOutput,\n  createReadableStream,\n  ServerSentEvent,\n};\n", "/**\n * Get the current account\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the current account\n */\nasync function getCurrentAccount({ signal } = {}) {\n  const response = await this.request(\"/account\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  current: getCurrentAccount,\n};\n", "/**\n * Fetch a model collection\n *\n * @param {string} collection_slug - Required. The slug of the collection. See http://replicate.com/collections\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with the collection data\n */\nasync function getCollection(collection_slug, { signal } = {}) {\n  const response = await this.request(`/collections/${collection_slug}`, {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Fetch a list of model collections\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with the collections data\n */\nasync function listCollections({ signal } = {}) {\n  const response = await this.request(\"/collections\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = { get: getCollection, list: listCollections };\n", "const { transformFileInputs } = require(\"./util\");\n\n/**\n * Create a new prediction with a deployment\n *\n * @param {string} deployment_owner - Required. The username of the user or organization who owns the deployment\n * @param {string} deployment_name - Required. The name of the deployment\n * @param {object} options\n * @param {object} options.input - Required. An object with the model inputs\n * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n * @param {boolean|integer} [options.wait] - Whether to wait until the prediction is completed before returning. If an integer is provided, it will wait for that many seconds. Defaults to false\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the created prediction data\n */\nasync function createPrediction(deployment_owner, deployment_name, options) {\n  const { input, wait, signal, ...data } = options;\n\n  if (data.webhook) {\n    try {\n      // eslint-disable-next-line no-new\n      new URL(data.webhook);\n    } catch (err) {\n      throw new Error(\"Invalid webhook URL\");\n    }\n  }\n\n  const headers = {};\n  if (wait) {\n    if (typeof wait === \"number\") {\n      const n = Math.max(1, Math.ceil(Number(wait)) || 1);\n      headers[\"Prefer\"] = `wait=${n}`;\n    } else {\n      headers[\"Prefer\"] = \"wait\";\n    }\n  }\n\n  const response = await this.request(\n    `/deployments/${deployment_owner}/${deployment_name}/predictions`,\n    {\n      method: \"POST\",\n      headers,\n      data: {\n        ...data,\n        input: await transformFileInputs(\n          this,\n          input,\n          this.fileEncodingStrategy\n        ),\n      },\n      signal,\n    }\n  );\n\n  return response.json();\n}\n\n/**\n * Get a deployment\n *\n * @param {string} deployment_owner - Required. The username of the user or organization who owns the deployment\n * @param {string} deployment_name - Required. The name of the deployment\n * @param {object] [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the deployment data\n */\nasync function getDeployment(\n  deployment_owner,\n  deployment_name,\n  { signal } = {}\n) {\n  const response = await this.request(\n    `/deployments/${deployment_owner}/${deployment_name}`,\n    {\n      method: \"GET\",\n      signal,\n    }\n  );\n\n  return response.json();\n}\n\n/**\n * @typedef {Object} DeploymentCreateRequest - Request body for `deployments.create`\n * @property {string} name - the name of the deployment\n * @property {string} model - the full name of the model that you want to deploy e.g. stability-ai/sdxl\n * @property {string} version - the 64-character string ID of the model version that you want to deploy\n * @property {string} hardware - the SKU for the hardware used to run the model, via `replicate.hardware.list()`\n * @property {number} min_instances - the minimum number of instances for scaling\n * @property {number} max_instances - the maximum number of instances for scaling\n */\n\n/**\n * Create a deployment\n *\n * @param {DeploymentCreateRequest} deployment_config - Required. The deployment config.\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the deployment data\n */\nasync function createDeployment(deployment_config, { signal } = {}) {\n  const response = await this.request(\"/deployments\", {\n    method: \"POST\",\n    data: deployment_config,\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * @typedef {Object} DeploymentUpdateRequest - Request body for `deployments.update`\n * @property {string} version - the 64-character string ID of the model version that you want to deploy\n * @property {string} hardware - the SKU for the hardware used to run the model, via `replicate.hardware.list()`\n * @property {number} min_instances - the minimum number of instances for scaling\n * @property {number} max_instances - the maximum number of instances for scaling\n */\n\n/**\n * Update an existing deployment\n *\n * @param {string} deployment_owner - Required. The username of the user or organization who owns the deployment\n * @param {string} deployment_name - Required. The name of the deployment\n * @param {DeploymentUpdateRequest} deployment_config - Required. The deployment changes.\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the deployment data\n */\nasync function updateDeployment(\n  deployment_owner,\n  deployment_name,\n  deployment_config,\n  { signal } = {}\n) {\n  const response = await this.request(\n    `/deployments/${deployment_owner}/${deployment_name}`,\n    {\n      method: \"PATCH\",\n      data: deployment_config,\n      signal,\n    }\n  );\n\n  return response.json();\n}\n\n/**\n * Delete a deployment\n *\n * @param {string} deployment_owner - Required. The username of the user or organization who owns the deployment\n * @param {string} deployment_name - Required. The name of the deployment\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<boolean>} Resolves with true if the deployment was deleted\n */\nasync function deleteDeployment(\n  deployment_owner,\n  deployment_name,\n  { signal } = {}\n) {\n  const response = await this.request(\n    `/deployments/${deployment_owner}/${deployment_name}`,\n    {\n      method: \"DELETE\",\n      signal,\n    }\n  );\n\n  return response.status === 204;\n}\n\n/**\n * List all deployments\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with a page of deployments\n */\nasync function listDeployments({ signal } = {}) {\n  const response = await this.request(\"/deployments\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  predictions: {\n    create: createPrediction,\n  },\n  get: getDeployment,\n  create: createDeployment,\n  update: updateDeployment,\n  list: listDeployments,\n  delete: deleteDeployment,\n};\n", "/**\n * List hardware\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object[]>} Resolves with the array of hardware\n */\nasync function listHardware({ signal } = {}) {\n  const response = await this.request(\"/hardware\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  list: listHardware,\n};\n", "/**\n * Get information about a model\n *\n * @param {string} model_owner - Required. The name of the user or organization that owns the model\n * @param {string} model_name - Required. The name of the model\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the model data\n */\nasync function getModel(model_owner, model_name, { signal } = {}) {\n  const response = await this.request(`/models/${model_owner}/${model_name}`, {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * List model versions\n *\n * @param {string} model_owner - Required. The name of the user or organization that owns the model\n * @param {string} model_name - Required. The name of the model\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the list of model versions\n */\nasync function listModelVersions(model_owner, model_name, { signal } = {}) {\n  const response = await this.request(\n    `/models/${model_owner}/${model_name}/versions`,\n    {\n      method: \"GET\",\n      signal,\n    }\n  );\n\n  return response.json();\n}\n\n/**\n * Get a specific model version\n *\n * @param {string} model_owner - Required. The name of the user or organization that owns the model\n * @param {string} model_name - Required. The name of the model\n * @param {string} version_id - Required. The model version\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the model version data\n */\nasync function getModelVersion(\n  model_owner,\n  model_name,\n  version_id,\n  { signal } = {}\n) {\n  const response = await this.request(\n    `/models/${model_owner}/${model_name}/versions/${version_id}`,\n    {\n      method: \"GET\",\n      signal,\n    }\n  );\n\n  return response.json();\n}\n\n/**\n * List all public models\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the model version data\n */\nasync function listModels({ signal } = {}) {\n  const response = await this.request(\"/models\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Create a new model\n *\n * @param {string} model_owner - Required. The name of the user or organization that will own the model. This must be the same as the user or organization that is making the API request. In other words, the API token used in the request must belong to this user or organization.\n * @param {string} model_name - Required. The name of the model. This must be unique among all models owned by the user or organization.\n * @param {object} options\n * @param {(\"public\"|\"private\")} options.visibility - Required. Whether the model should be public or private. A public model can be viewed and run by anyone, whereas a private model can be viewed and run only by the user or organization members that own the model.\n * @param {string} options.hardware - Required. The SKU for the hardware used to run the model. Possible values can be found by calling `Replicate.hardware.list()`.\n * @param {string} options.description - A description of the model.\n * @param {string} options.github_url - A URL for the model's source code on GitHub.\n * @param {string} options.paper_url - A URL for the model's paper.\n * @param {string} options.license_url - A URL for the model's license.\n * @param {string} options.cover_image_url - A URL for the model's cover image. This should be an image file.\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the model version data\n */\nasync function createModel(model_owner, model_name, options) {\n  const { signal, ...rest } = options;\n  const data = { owner: model_owner, name: model_name, ...rest };\n\n  const response = await this.request(\"/models\", {\n    method: \"POST\",\n    data,\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Search for public models\n *\n * @param {string} query - The search query\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with a page of models matching the search query\n */\nasync function search(query, { signal } = {}) {\n  const response = await this.request(\"/models\", {\n    method: \"QUERY\",\n    headers: {\n      \"Content-Type\": \"text/plain\",\n    },\n    data: query,\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  get: getModel,\n  list: listModels,\n  create: createModel,\n  versions: { list: listModelVersions, get: getModelVersion },\n  search,\n};\n", "const { transformFileInputs } = require(\"./util\");\n\n/**\n * Create a new prediction\n *\n * @param {object} options\n * @param {string} options.model - The model.\n * @param {string} options.version - The model version.\n * @param {object} options.input - Required. An object with the model inputs\n * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n * @param {boolean|integer} [options.wait] - Whether to wait until the prediction is completed before returning. If an integer is provided, it will wait for that many seconds. Defaults to false\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the created prediction\n */\nasync function createPrediction(options) {\n  const { model, version, input, wait, signal, ...data } = options;\n\n  if (data.webhook) {\n    try {\n      // eslint-disable-next-line no-new\n      new URL(data.webhook);\n    } catch (err) {\n      throw new Error(\"Invalid webhook URL\");\n    }\n  }\n\n  const headers = {};\n  if (wait) {\n    if (typeof wait === \"number\") {\n      const n = Math.max(1, Math.ceil(Number(wait)) || 1);\n      headers[\"Prefer\"] = `wait=${n}`;\n    } else {\n      headers[\"Prefer\"] = \"wait\";\n    }\n  }\n\n  let response;\n  if (version) {\n    response = await this.request(\"/predictions\", {\n      method: \"POST\",\n      headers,\n      data: {\n        ...data,\n        input: await transformFileInputs(\n          this,\n          input,\n          this.fileEncodingStrategy\n        ),\n        version,\n      },\n      signal,\n    });\n  } else if (model) {\n    response = await this.request(`/models/${model}/predictions`, {\n      method: \"POST\",\n      headers,\n      data: {\n        ...data,\n        input: await transformFileInputs(\n          this,\n          input,\n          this.fileEncodingStrategy\n        ),\n      },\n      signal,\n    });\n  } else {\n    throw new Error(\"Either model or version must be specified\");\n  }\n\n  return response.json();\n}\n\n/**\n * Fetch a prediction by ID\n *\n * @param {number} prediction_id - Required. The prediction ID\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the prediction data\n */\nasync function getPrediction(prediction_id, { signal } = {}) {\n  const response = await this.request(`/predictions/${prediction_id}`, {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Cancel a prediction by ID\n *\n * @param {string} prediction_id - Required. The training ID\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the data for the training\n */\nasync function cancelPrediction(prediction_id, { signal } = {}) {\n  const response = await this.request(`/predictions/${prediction_id}/cancel`, {\n    method: \"POST\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * List all predictions\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with a page of predictions\n */\nasync function listPredictions({ signal } = {}) {\n  const response = await this.request(\"/predictions\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  create: createPrediction,\n  get: getPrediction,\n  cancel: cancelPrediction,\n  list: listPredictions,\n};\n", "/**\n * Create a new training\n *\n * @param {string} model_owner - Required. The username of the user or organization who owns the model\n * @param {string} model_name - Required. The name of the model\n * @param {string} version_id - Required. The version ID\n * @param {object} options\n * @param {string} options.destination - Required. The destination for the trained version in the form \"{username}/{model_name}\"\n * @param {object} options.input - Required. An object with the model inputs\n * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the training updates\n * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the data for the created training\n */\nasync function createTraining(model_owner, model_name, version_id, options) {\n  const { signal, ...data } = options;\n\n  if (data.webhook) {\n    try {\n      // eslint-disable-next-line no-new\n      new URL(data.webhook);\n    } catch (err) {\n      throw new Error(\"Invalid webhook URL\");\n    }\n  }\n\n  const response = await this.request(\n    `/models/${model_owner}/${model_name}/versions/${version_id}/trainings`,\n    {\n      method: \"POST\",\n      data,\n      signal,\n    }\n  );\n\n  return response.json();\n}\n\n/**\n * Fetch a training by ID\n *\n * @param {string} training_id - Required. The training ID\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the data for the training\n */\nasync function getTraining(training_id, { signal } = {}) {\n  const response = await this.request(`/trainings/${training_id}`, {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * Cancel a training by ID\n *\n * @param {string} training_id - Required. The training ID\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the data for the training\n */\nasync function cancelTraining(training_id, { signal } = {}) {\n  const response = await this.request(`/trainings/${training_id}/cancel`, {\n    method: \"POST\",\n    signal,\n  });\n\n  return response.json();\n}\n\n/**\n * List all trainings\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} - Resolves with a page of trainings\n */\nasync function listTrainings({ signal } = {}) {\n  const response = await this.request(\"/trainings\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  create: createTraining,\n  get: getTraining,\n  cancel: cancelTraining,\n  list: listTrainings,\n};\n", "/**\n * Get the default webhook signing secret\n *\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] - An optional AbortSignal\n * @returns {Promise<object>} Resolves with the signing secret for the default webhook\n */\nasync function getDefaultWebhookSecret({ signal } = {}) {\n  const response = await this.request(\"/webhooks/default/secret\", {\n    method: \"GET\",\n    signal,\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  default: {\n    secret: {\n      get: getDefaultWebhookSecret,\n    },\n  },\n};\n", "{\n  \"name\": \"replicate\",\n  \"version\": \"1.2.0\",\n  \"description\": \"JavaScript client for Replicate\",\n  \"repository\": \"github:replicate/replicate-javascript\",\n  \"homepage\": \"https://github.com/replicate/replicate-javascript#readme\",\n  \"bugs\": \"https://github.com/replicate/replicate-javascript/issues\",\n  \"license\": \"Apache-2.0\",\n  \"main\": \"index.js\",\n  \"type\": \"commonjs\",\n  \"types\": \"index.d.ts\",\n  \"files\": [\n    \"CONTRIBUTING.md\",\n    \"LICENSE\",\n    \"README.md\",\n    \"index.d.ts\",\n    \"index.js\",\n    \"lib/**/*.js\",\n    \"vendor/**/*\",\n    \"package.json\"\n  ],\n  \"engines\": {\n    \"node\": \">=18.0.0\",\n    \"npm\": \">=7.19.0\",\n    \"git\": \">=2.11.0\",\n    \"yarn\": \">=1.7.0\"\n  },\n  \"scripts\": {\n    \"check\": \"tsc\",\n    \"format\": \"biome format . --write\",\n    \"lint-biome\": \"biome lint .\",\n    \"lint-publint\": \"publint\",\n    \"lint\": \"npm run lint-biome && npm run lint-publint\",\n    \"test\": \"jest\"\n  },\n  \"optionalDependencies\": {\n    \"readable-stream\": \">=4.0.0\"\n  },\n  \"devDependencies\": {\n    \"@biomejs/biome\": \"^1.4.1\",\n    \"@types/jest\": \"^29.5.3\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.56.0\",\n    \"cross-fetch\": \"^3.1.5\",\n    \"jest\": \"^29.7.0\",\n    \"nock\": \"^14.0.0-beta.6\",\n    \"publint\": \"^0.2.7\",\n    \"ts-jest\": \"^29.1.0\",\n    \"typescript\": \"^5.0.2\"\n  }\n}\n", "const ApiError = require(\"./lib/error\");\nconst ModelVersionIdentifier = require(\"./lib/identifier\");\nconst { createReadableStream, createFileOutput } = require(\"./lib/stream\");\nconst {\n  transform,\n  withAutomaticRetries,\n  validateWebhook,\n  parseProgressFromLogs,\n  streamAsyncIterator,\n} = require(\"./lib/util\");\n\nconst accounts = require(\"./lib/accounts\");\nconst collections = require(\"./lib/collections\");\nconst deployments = require(\"./lib/deployments\");\nconst files = require(\"./lib/files\");\nconst hardware = require(\"./lib/hardware\");\nconst models = require(\"./lib/models\");\nconst predictions = require(\"./lib/predictions\");\nconst trainings = require(\"./lib/trainings\");\nconst webhooks = require(\"./lib/webhooks\");\n\nconst packageJSON = require(\"./package.json\");\n\n/**\n * Replicate API client library\n *\n * @see https://replicate.com/docs/reference/http\n * @example\n * // Create a new Replicate API client instance\n * const Replicate = require(\"replicate\");\n * const replicate = new Replicate({\n *     // get your token from https://replicate.com/account\n *     auth: process.env.REPLICATE_API_TOKEN,\n *     userAgent: \"my-app/1.2.3\"\n * });\n *\n * // Run a model and await the result:\n * const model = 'owner/model:version-id'\n * const input = {text: 'Hello, world!'}\n * const output = await replicate.run(model, { input });\n */\nclass Replicate {\n  /**\n   * Create a new Replicate API client instance.\n   *\n   * @param {object} options - Configuration options for the client\n   * @param {string} options.auth - API access token. Defaults to the `REPLICATE_API_TOKEN` environment variable.\n   * @param {string} options.userAgent - Identifier of your app\n   * @param {string} [options.baseUrl] - Defaults to https://api.replicate.com/v1\n   * @param {Function} [options.fetch] - Fetch function to use. Defaults to `globalThis.fetch`\n   * @param {boolean} [options.useFileOutput] - Set to `false` to disable `FileOutput` objects from `run` instead of URLs, defaults to true.\n   * @param {\"default\" | \"upload\" | \"data-uri\"} [options.fileEncodingStrategy] - Determines the file encoding strategy to use\n   */\n  constructor(options = {}) {\n    this.auth =\n      options.auth ||\n      (typeof process !== \"undefined\" ? process.env.REPLICATE_API_TOKEN : null);\n    this.userAgent =\n      options.userAgent || `replicate-javascript/${packageJSON.version}`;\n    this.baseUrl = options.baseUrl || \"https://api.replicate.com/v1\";\n    this.fetch = options.fetch || globalThis.fetch;\n    this.fileEncodingStrategy = options.fileEncodingStrategy || \"default\";\n    this.useFileOutput = options.useFileOutput === false ? false : true;\n\n    this.accounts = {\n      current: accounts.current.bind(this),\n    };\n\n    this.collections = {\n      list: collections.list.bind(this),\n      get: collections.get.bind(this),\n    };\n\n    this.deployments = {\n      get: deployments.get.bind(this),\n      create: deployments.create.bind(this),\n      update: deployments.update.bind(this),\n      delete: deployments.delete.bind(this),\n      list: deployments.list.bind(this),\n      predictions: {\n        create: deployments.predictions.create.bind(this),\n      },\n    };\n\n    this.files = {\n      create: files.create.bind(this),\n      get: files.get.bind(this),\n      list: files.list.bind(this),\n      delete: files.delete.bind(this),\n    };\n\n    this.hardware = {\n      list: hardware.list.bind(this),\n    };\n\n    this.models = {\n      get: models.get.bind(this),\n      list: models.list.bind(this),\n      create: models.create.bind(this),\n      versions: {\n        list: models.versions.list.bind(this),\n        get: models.versions.get.bind(this),\n      },\n      search: models.search.bind(this),\n    };\n\n    this.predictions = {\n      create: predictions.create.bind(this),\n      get: predictions.get.bind(this),\n      cancel: predictions.cancel.bind(this),\n      list: predictions.list.bind(this),\n    };\n\n    this.trainings = {\n      create: trainings.create.bind(this),\n      get: trainings.get.bind(this),\n      cancel: trainings.cancel.bind(this),\n      list: trainings.list.bind(this),\n    };\n\n    this.webhooks = {\n      default: {\n        secret: {\n          get: webhooks.default.secret.get.bind(this),\n        },\n      },\n    };\n  }\n\n  /**\n   * Run a model and wait for its output.\n   *\n   * @param {string} ref - Required. The model version identifier in the format \"owner/name\" or \"owner/name:version\"\n   * @param {object} options\n   * @param {object} options.input - Required. An object with the model inputs\n   * @param {{mode: \"block\", timeout?: number, interval?: number} | {mode: \"poll\", interval?: number }} [options.wait] - Options for waiting for the prediction to finish. If `wait` is explicitly true, the function will block and wait for the prediction to finish.\n   * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n   * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n   * @param {AbortSignal} [options.signal] - AbortSignal to cancel the prediction\n   * @param {Function} [progress] - Callback function that receives the prediction object as it's updated. The function is called when the prediction is created, each time its updated while polling for completion, and when it's completed.\n   * @throws {Error} If the reference is invalid\n   * @throws {Error} If the prediction failed\n   * @returns {Promise<object>} - Resolves with the output of running the model\n   */\n  async run(ref, options, progress) {\n    const { wait = { mode: \"block\" }, signal, ...data } = options;\n\n    const identifier = ModelVersionIdentifier.parse(ref);\n\n    let prediction;\n    if (identifier.version) {\n      prediction = await this.predictions.create({\n        ...data,\n        version: identifier.version,\n        wait: wait.mode === \"block\" ? wait.timeout ?? true : false,\n      });\n    } else if (identifier.owner && identifier.name) {\n      prediction = await this.predictions.create({\n        ...data,\n        model: `${identifier.owner}/${identifier.name}`,\n        wait: wait.mode === \"block\" ? wait.timeout ?? true : false,\n      });\n    } else {\n      throw new Error(\"Invalid model version identifier\");\n    }\n\n    // Call progress callback with the initial prediction object\n    if (progress) {\n      progress(prediction);\n    }\n\n    const isDone = wait.mode === \"block\" && prediction.status !== \"starting\";\n    if (!isDone) {\n      prediction = await this.wait(\n        prediction,\n        { interval: wait.mode === \"poll\" ? wait.interval : undefined },\n        async (updatedPrediction) => {\n          // Call progress callback with the updated prediction object\n          if (progress) {\n            progress(updatedPrediction);\n          }\n\n          // We handle the cancel later in the function.\n          if (signal && signal.aborted) {\n            return true; // stop polling\n          }\n\n          return false; // continue polling\n        }\n      );\n    }\n\n    if (signal && signal.aborted) {\n      prediction = await this.predictions.cancel(prediction.id);\n    }\n\n    // Call progress callback with the completed prediction object\n    if (progress) {\n      progress(prediction);\n    }\n\n    if (prediction.status === \"failed\") {\n      throw new Error(`Prediction failed: ${prediction.error}`);\n    }\n\n    return transform(prediction.output, (value) => {\n      if (\n        typeof value === \"string\" &&\n        (value.startsWith(\"https:\") || value.startsWith(\"data:\"))\n      ) {\n        return this.useFileOutput\n          ? createFileOutput({ url: value, fetch: this.fetch })\n          : value;\n      }\n      return value;\n    });\n  }\n\n  /**\n   * Make a request to the Replicate API.\n   *\n   * @param {string} route - REST API endpoint path\n   * @param {object} options - Request parameters\n   * @param {string} [options.method] - HTTP method. Defaults to GET\n   * @param {object} [options.params] - Query parameters\n   * @param {object|Headers} [options.headers] - HTTP headers\n   * @param {object} [options.data] - Body parameters\n   * @param {AbortSignal} [options.signal] - AbortSignal to cancel the request\n   * @returns {Promise<Response>} - Resolves with the response object\n   * @throws {ApiError} If the request failed\n   */\n  async request(route, options) {\n    const { auth, baseUrl, userAgent } = this;\n\n    let url;\n    if (route instanceof URL) {\n      url = route;\n    } else {\n      url = new URL(\n        route.startsWith(\"/\") ? route.slice(1) : route,\n        baseUrl.endsWith(\"/\") ? baseUrl : `${baseUrl}/`\n      );\n    }\n\n    const { method = \"GET\", params = {}, data, signal } = options;\n\n    for (const [key, value] of Object.entries(params)) {\n      url.searchParams.append(key, value);\n    }\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"User-Agent\": userAgent,\n    };\n    if (auth) {\n      headers[\"Authorization\"] = `Bearer ${auth}`;\n    }\n    if (options.headers) {\n      for (const [key, value] of Object.entries(options.headers)) {\n        headers[key] = value;\n      }\n    }\n\n    let body = undefined;\n    if (data instanceof FormData) {\n      body = data;\n      // biome-ignore lint/performance/noDelete:\n      delete headers[\"Content-Type\"]; // Use automatic content type header\n    } else if (data) {\n      body = JSON.stringify(data);\n    }\n\n    const init = {\n      method,\n      headers,\n      body,\n      signal,\n    };\n\n    const shouldRetry =\n      method === \"GET\"\n        ? (response) => response.status === 429 || response.status >= 500\n        : (response) => response.status === 429;\n\n    // Workaround to fix `TypeError: Illegal invocation` error in Cloudflare Workers\n    // https://github.com/replicate/replicate-javascript/issues/134\n    const _fetch = this.fetch; // eslint-disable-line no-underscore-dangle\n    const response = await withAutomaticRetries(async () => _fetch(url, init), {\n      shouldRetry,\n    });\n\n    if (!response.ok) {\n      const request = new Request(url, init);\n      const responseText = await response.text();\n      throw new ApiError(\n        `Request to ${url} failed with status ${response.status} ${response.statusText}: ${responseText}.`,\n        request,\n        response\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Stream a model and wait for its output.\n   *\n   * @param {string} identifier - Required. The model version identifier in the format \"{owner}/{name}:{version}\"\n   * @param {object} options\n   * @param {object} options.input - Required. An object with the model inputs\n   * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n   * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n   * @param {AbortSignal} [options.signal] - AbortSignal to cancel the prediction\n   * @throws {Error} If the prediction failed\n   * @yields {ServerSentEvent} Each streamed event from the prediction\n   */\n  async *stream(ref, options) {\n    const { wait, signal, ...data } = options;\n\n    const identifier = ModelVersionIdentifier.parse(ref);\n\n    let prediction;\n    if (identifier.version) {\n      prediction = await this.predictions.create({\n        ...data,\n        version: identifier.version,\n      });\n    } else if (identifier.owner && identifier.name) {\n      prediction = await this.predictions.create({\n        ...data,\n        model: `${identifier.owner}/${identifier.name}`,\n      });\n    } else {\n      throw new Error(\"Invalid model version identifier\");\n    }\n\n    if (prediction.urls && prediction.urls.stream) {\n      const stream = createReadableStream({\n        url: prediction.urls.stream,\n        fetch: this.fetch,\n        ...(signal ? { options: { signal } } : {}),\n      });\n\n      yield* streamAsyncIterator(stream);\n    } else {\n      throw new Error(\"Prediction does not support streaming\");\n    }\n  }\n\n  /**\n   * Paginate through a list of results.\n   *\n   * @generator\n   * @example\n   * for await (const page of replicate.paginate(replicate.predictions.list) {\n   *    console.log(page);\n   * }\n   * @param {Function} endpoint - Function that returns a promise for the next page of results\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] - AbortSignal to cancel the request.\n   * @yields {object[]} Each page of results\n   */\n  async *paginate(endpoint, options = {}) {\n    const response = await endpoint();\n    yield response.results;\n    if (response.next && !(options.signal && options.signal.aborted)) {\n      const nextPage = () =>\n        this.request(response.next, {\n          method: \"GET\",\n          signal: options.signal,\n        }).then((r) => r.json());\n      yield* this.paginate(nextPage, options);\n    }\n  }\n\n  /**\n   * Wait for a prediction to finish.\n   *\n   * If the prediction has already finished,\n   * this function returns immediately.\n   * Otherwise, it polls the API until the prediction finishes.\n   *\n   * @async\n   * @param {object} prediction - Prediction object\n   * @param {object} options - Options\n   * @param {number} [options.interval] - Polling interval in milliseconds. Defaults to 500\n   * @param {Function} [stop] - Async callback function that is called after each polling attempt. Receives the prediction object as an argument. Return false to cancel polling.\n   * @throws {Error} If the prediction doesn't complete within the maximum number of attempts\n   * @throws {Error} If the prediction failed\n   * @returns {Promise<object>} Resolves with the completed prediction object\n   */\n  async wait(prediction, options, stop) {\n    const { id } = prediction;\n    if (!id) {\n      throw new Error(\"Invalid prediction\");\n    }\n\n    if (\n      prediction.status === \"succeeded\" ||\n      prediction.status === \"failed\" ||\n      prediction.status === \"canceled\"\n    ) {\n      return prediction;\n    }\n\n    // eslint-disable-next-line no-promise-executor-return\n    const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n    const interval = (options && options.interval) || 500;\n\n    let updatedPrediction = await this.predictions.get(id);\n\n    while (\n      updatedPrediction.status !== \"succeeded\" &&\n      updatedPrediction.status !== \"failed\" &&\n      updatedPrediction.status !== \"canceled\"\n    ) {\n      /* eslint-disable no-await-in-loop */\n      if (stop && (await stop(updatedPrediction)) === true) {\n        break;\n      }\n\n      await sleep(interval);\n      updatedPrediction = await this.predictions.get(prediction.id);\n      /* eslint-enable no-await-in-loop */\n    }\n\n    if (updatedPrediction.status === \"failed\") {\n      throw new Error(`Prediction failed: ${updatedPrediction.error}`);\n    }\n\n    return updatedPrediction;\n  }\n}\n\nmodule.exports = Replicate;\nmodule.exports.validateWebhook = validateWebhook;\nmodule.exports.parseProgressFromLogs = parseProgressFromLogs;\n", "/**\r\n * Cloudflare Pages Function for Replicate FLUX Schnell Image Generation\r\n * Endpoint: /api/generate-image\r\n *\r\n * Uses: https://replicate.com/black-forest-labs/flux-schnell\r\n * Fast, high-quality image generation\r\n */\r\n\r\nimport Replicate from 'replicate';\r\n\r\ninterface Env {\r\n  REPLICATE_API_TOKEN: string;\r\n}\r\n\r\nexport async function onRequestPost(context: { request: Request; env: Env }) {\r\n  try {\r\n    const { prompt } = await context.request.json();\r\n\r\n    if (!prompt || typeof prompt !== 'string') {\r\n      return new Response(\r\n        JSON.stringify({ error: 'Prompt is required' }),\r\n        {\r\n          status: 400,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        }\r\n      );\r\n    }\r\n\r\n    // Check for API token\r\n    const apiToken = context.env.REPLICATE_API_TOKEN;\r\n    if (!apiToken) {\r\n      console.error('\u274C REPLICATE_API_TOKEN not found in environment');\r\n      return new Response(\r\n        JSON.stringify({ error: 'API token not configured' }),\r\n        {\r\n          status: 500,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        }\r\n      );\r\n    }\r\n\r\n    console.log('\uD83C\uDFA8 Generating image with Replicate FLUX Schnell:', prompt);\r\n\r\n    // Initialize Replicate client\r\n    const replicate = new Replicate({\r\n      auth: apiToken,\r\n    });\r\n\r\n    // Generate image using FLUX Schnell\r\n    const output = await replicate.run(\r\n      \"black-forest-labs/flux-schnell\",\r\n      {\r\n        input: {\r\n          prompt: prompt,\r\n          num_outputs: 1,\r\n          aspect_ratio: \"16:9\",\r\n          output_format: \"jpg\",\r\n          output_quality: 80,\r\n        }\r\n      }\r\n    );\r\n\r\n    // FLUX Schnell returns array of image URLs\r\n    if (!output || !Array.isArray(output) || output.length === 0) {\r\n      console.error('\u274C No images generated from Replicate');\r\n      return new Response(\r\n        JSON.stringify({ error: 'No images generated' }),\r\n        {\r\n          status: 500,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 Replicate image generated successfully');\r\n\r\n    // Return the first image URL\r\n    return new Response(\r\n      JSON.stringify({\r\n        imageUrl: output[0],\r\n        prompt: prompt\r\n      }),\r\n      {\r\n        status: 200,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Cache-Control': 'public, max-age=3600' // Cache for 1 hour\r\n        }\r\n      }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Replicate generation failed:', error);\r\n\r\n    return new Response(\r\n      JSON.stringify({\r\n        error: 'Image generation failed',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      }),\r\n      {\r\n        status: 500,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n    );\r\n  }\r\n}\r\n", "/**\r\n * Cloudflare Pages Function for Vectorize operations\r\n * Handles card embedding storage and retrieval\r\n */\r\n\r\ninterface Env {\r\n  VECTORIZE: Vectorize;\r\n  AI: Ai;\r\n}\r\n\r\ninterface CardVector {\r\n  id: string;\r\n  values: number[];\r\n  metadata: {\r\n    name: string;\r\n    description: string;\r\n    might: number;\r\n    fortune: number;\r\n    cunning: number;\r\n    category: string;\r\n    deckId?: string;\r\n  };\r\n}\r\n\r\n// POST /api/vectorize/upsert - Upsert card embeddings\r\nexport const onRequestPost: PagesFunction<Env> = async (context) => {\r\n  const { request, env } = context;\r\n\r\n  try {\r\n    const { cards, deckId } = await request.json() as {\r\n      cards: Array<{\r\n        id: string;\r\n        name: string;\r\n        description: string;\r\n        might: number;\r\n        fortune: number;\r\n        cunning: number;\r\n        category: string;\r\n      }>;\r\n      deckId?: string;\r\n    };\r\n\r\n    if (!cards || !Array.isArray(cards)) {\r\n      return new Response(JSON.stringify({ error: 'Invalid cards array' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // Generate embeddings for each card\r\n    const vectors: CardVector[] = [];\r\n\r\n    for (const card of cards) {\r\n      // Create text representation for embedding\r\n      const cardText = `${card.name}: ${card.description}. Stats - Might: ${card.might}, Fortune: ${card.fortune}, Cunning: ${card.cunning}`;\r\n\r\n      // Generate embedding using Workers AI\r\n      const embeddings = await env.AI.run('@cf/baai/bge-base-en-v1.5', {\r\n        text: [cardText]\r\n      });\r\n\r\n      const values = embeddings.data[0];\r\n      if (!values) {\r\n        console.warn(`Failed to generate embedding for card ${card.id}`);\r\n        continue;\r\n      }\r\n\r\n      vectors.push({\r\n        id: card.id,\r\n        values,\r\n        metadata: {\r\n          name: card.name,\r\n          description: card.description,\r\n          might: card.might,\r\n          fortune: card.fortune,\r\n          cunning: card.cunning,\r\n          category: card.category,\r\n          ...(deckId && { deckId })\r\n        }\r\n      });\r\n    }\r\n\r\n    // Upsert vectors to Vectorize\r\n    const result = await env.VECTORIZE.upsert(vectors);\r\n\r\n    return new Response(JSON.stringify({\r\n      success: true,\r\n      count: result.count,\r\n      ids: result.ids\r\n    }), {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Vectorize upsert error:', error);\r\n    return new Response(JSON.stringify({\r\n      error: 'Failed to upsert vectors',\r\n      message: error instanceof Error ? error.message : 'Unknown error'\r\n    }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n};\r\n\r\n// GET /api/vectorize/query - Query similar cards\r\nexport const onRequestGet: PagesFunction<Env> = async (context) => {\r\n  const { request, env } = context;\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const queryText = url.searchParams.get('q');\r\n    const topK = parseInt(url.searchParams.get('topK') || '5');\r\n    const deckId = url.searchParams.get('deckId');\r\n    const minMight = url.searchParams.get('minMight');\r\n    const minFortune = url.searchParams.get('minFortune');\r\n    const minCunning = url.searchParams.get('minCunning');\r\n\r\n    if (!queryText) {\r\n      return new Response(JSON.stringify({ error: 'Query text required' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // Generate embedding for query\r\n    const embeddings = await env.AI.run('@cf/baai/bge-base-en-v1.5', {\r\n      text: [queryText]\r\n    });\r\n\r\n    const queryVector = embeddings.data[0];\r\n    if (!queryVector) {\r\n      return new Response(JSON.stringify({ error: 'Failed to generate query embedding' }), {\r\n        status: 500,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // Build filter for metadata\r\n    const filter: Record<string, any> = {};\r\n    if (deckId) filter.deckId = deckId;\r\n    if (minMight) filter.might = { $gte: parseInt(minMight) };\r\n    if (minFortune) filter.fortune = { $gte: parseInt(minFortune) };\r\n    if (minCunning) filter.cunning = { $gte: parseInt(minCunning) };\r\n\r\n    // Query Vectorize\r\n    const results = await env.VECTORIZE.query(queryVector, {\r\n      topK,\r\n      returnValues: false,\r\n      returnMetadata: 'all',\r\n      ...(Object.keys(filter).length > 0 && { filter })\r\n    });\r\n\r\n    return new Response(JSON.stringify({\r\n      success: true,\r\n      matches: results.matches.map(match => ({\r\n        id: match.id,\r\n        score: match.score,\r\n        card: match.metadata\r\n      }))\r\n    }), {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Vectorize query error:', error);\r\n    return new Response(JSON.stringify({\r\n      error: 'Failed to query vectors',\r\n      message: error instanceof Error ? error.message : 'Unknown error'\r\n    }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n};\r\n", "/**\r\n * Middleware configuration for Cloudflare Pages Functions\r\n * Enables Node.js compatibility for packages like craiyon\r\n */\r\n\r\nexport const onRequest: PagesFunction = async (context) => {\r\n  return context.next();\r\n};\r\n\r\n// Export compatibility flags\r\nexport const config = {\r\n  compatibility_flags: ['nodejs_compat'],\r\n};\r\n", "import { onRequestPost as __api_generate_image_ts_onRequestPost } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\functions\\\\api\\\\generate-image.ts\"\nimport { onRequestGet as __api_vectorize_ts_onRequestGet } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\functions\\\\api\\\\vectorize.ts\"\nimport { onRequestPost as __api_vectorize_ts_onRequestPost } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\functions\\\\api\\\\vectorize.ts\"\nimport { onRequest as ___middleware_ts_onRequest } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\functions\\\\_middleware.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/generate-image\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_generate_image_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/vectorize\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_vectorize_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/vectorize\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_vectorize_ts_onRequestPost],\n    },\n  {\n      routePath: \"/\",\n      mountPath: \"/\",\n      method: \"\",\n      middlewares: [___middleware_ts_onRequest],\n      modules: [],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\.wrangler\\\\tmp\\\\bundle-QxqQ4N\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\.wrangler\\\\tmp\\\\bundle-QxqQ4N\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\.wrangler\\\\tmp\\\\bundle-QxqQ4N\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\aaron\\\\Documents\\\\VibeCodeDnD\\\\glesolas-game\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["init_performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "init_performance", "dir", "env", "count", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "init_performance", "version", "ref", "match", "init_performance", "init_performance", "error", "init_performance", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__copyProps", "init_performance", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__copyProps", "require_stream", "init_performance", "fetch", "init", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "version", "init_performance", "init_performance", "init_performance", "Replicate", "ref", "init", "response", "context", "Replicate", "error", "init_performance", "onRequestPost", "init_performance", "context", "env", "error", "match", "init_performance", "context", "onRequestPost", "init_performance", "init_performance", "init_performance", "init_performance", "count", "value", "_a", "result", "char", "prefix", "i", "env", "init", "context", "error", "init_performance", "env", "init_performance", "env", "error", "init_performance", "env", "env", "init"]
}
